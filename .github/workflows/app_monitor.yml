name: Monitor app for changes

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  monitor:

    runs-on: ubuntu-latest

    env:
      APP_REPOSITORY: https://github.com/salesagility/SuiteCRM.git

    steps:

    - name: Code checkout
      uses: actions/checkout@v3

    - name: Check app repository for changes
      run: |
        echo "BUILD_NEEDED=false" >> $GITHUB_ENV

        # Ensure .ci exists
        [[ -d .ci ]] || mkdir -p .ci

        # Get current app version
        current_app_version="$(git ls-remote --refs --tags $APP_REPOSITORY | awk '{print $2}' | sed -E 's#.+/tags/(.+)#\1#g' | grep v7 | sort -V | tail -1)"

        if [[ ! -f .ci/app_version || -z $(cat .ci/app_version) ]]; then

          # If upstream version is not recorded, assume version change

          echo "Last upstream version has not been recorded, so assuming version change."
          echo "APP_VERSION=$current_app_version" >> $GITHUB_ENV
          echo $current_app_version > .ci/app_version

        elif [[ $current_app_version != $(cat .ci/app_version) ]]; then

          # If current upstream version differs from recorded one, update is needed.

          echo "Last and current upstream versions differ, triggering update"
          echo $current_app_version > .ci/app_version
          echo "APP_VERSION=$current_app_version" >> $GITHUB_ENV

        else

          # If upstream is the same, use recorded app version and don't trigger update - at least not yet.

          echo "Upstream version hasn't changed."
          echo "APP_VERSION=$(cat .ci/app_version)" >> $GITHUB_ENV

        fi

    - name: Commit changed version number
      id: commit
      run: |
        git config --local user.email "github-actions@github.com"
        git config --local user.name "github-actions"

        # Check if files have changed (ie. version change) and if so, trigger a build
        if [-z "$(git status --porcelain)"]; then
          echo "BUILD_NEEDED=false" >> $GITHUB_ENV
        else
          git add *
          git commit -am "chore(app): Automatic version update"
          echo "BUILD_NEEDED=true" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Send a build dispatch
      if: env.BUILD_NEEDED == 'true'
      run: |
        curl -X POST https://api.github.com/repos/tlii/suitecrm7-docker \
        -H 'Accept: application/vnd.github.everest-preview+json' \
        -u ${{ secrets.PAT }} \
        --data '{"event_type": "build_needed", "client_payload": { "commit_message": "'Automatic app version bump'" }}'i